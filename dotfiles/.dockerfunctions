#!/bin/bash
# Bash wrappers for docker run commands

export DOCKER_REPO_PREFIX=blavoie

#
# Helper Functions
#

dcleanup(){
	docker rm $(docker ps -aq 2>/dev/null) 2>/dev/null
	docker rm -v $(docker ps --filter status=exited -q 2>/dev/null) 2>/dev/null
	docker rmi $(docker images --filter dangling=true -q 2>/dev/null) 2>/dev/null
}

del_stopped(){
	local name=$1
	local state=$(docker inspect --format "{{.State.Running}}" $name 2>/dev/null)

	if [[ "$state" == "false" ]]; then
		docker rm $name
	fi
}

relies_on(){
	local containers=$@

	for container in $containers; do
		local state=$(docker inspect --format "{{.State.Running}}" $container 2>/dev/null)

		if [[ "$state" == "false" ]] || [[ "$state" == "" ]]; then
			echo "$container is not running, starting it for you."
			$container
		fi
	done
}

# get container IP addresses

docker-ip() {
    docker inspect --format '{{ .NetworkSettings.IPAddress }}' "$@"
}

docker-ips() {
    docker inspect -f '{{.Name}} - {{.NetworkSettings.IPAddress }}' $(docker ps -aq)
}

# creates an nginx config for a local route

nginx_config(){
	server=$1
	route=$2

	cat >${HOME}/.nginx/conf.d/${server}.conf <<-EOF
	upstream ${server} { server ${route}; }
	server {
	server_name ${server};
	location / {
	proxy_pass  http://${server};
	proxy_http_version 1.1;
	proxy_set_header Upgrade \$http_upgrade;
	proxy_set_header Connection "upgrade";
	proxy_set_header Host \$http_host;
	proxy_set_header X-Forwarded-Proto \$scheme;
	proxy_set_header X-Forwarded-For \$remote_addr;
	proxy_set_header X-Forwarded-Port \$server_port;
	proxy_set_header X-Request-Start \$msec;}
	}
EOF

	# restart nginx
	docker restart nginx

	# add host to /etc/hosts
	sudo hostess add $server 127.0.0.1

	# open browser
	browser-exec "http://${server}"
}

#
# Container Aliases
#

gitkraken() {
        del_stopped gitkraken

	docker create --name gitkraken \
		-v /tmp/.X11-unix:/tmp/.X11-unix \
		-e DISPLAY=$DISPLAY \
		-v $HOME:/opt/gitkraken/data \
		-v $HOME/.gitkraken:/opt/gitkraken/config \
		-v $HOME/.ssh:/opt/gitkraken/ssh \
		-v $(dirname $SSH_AUTH_SOCK):$(dirname $SSH_AUTH_SOCK) \
		-e SSH_AUTH_SOCK=$SSH_AUTH_SOCK \
		-e USER_ID=$(id -u) \
		-e GROUP_ID=$(id -g) \
		--privileged \
		-v=/dev/dri:/dev/dri:rw \
		local/gitkraken   

        docker start gitkraken                
}

openconnect() {
	del_stopped openconnect

	docker run --rm -it \
                -p 1080:1080
		-v /tmp/.X11-unix:/tmp/.X11-unix \
		-e DISPLAY \
		--privileged \
		--name openconnect \
		${DOCKER_REPO_PREFIX}/openconnect
}

tor-proxy(){
	del_stopped tor-proxy

	docker run -d \
		--restart always \
		-v /etc/localtime:/etc/localtime:ro \
		-p 9050:9050 \
		--name tor-proxy \
		${DOCKER_REPO_PREFIX}/tor-proxy

	sudo hostess add tor-proxy $(docker inspect --format "{{.NetworkSettings.Networks.bridge.IPAddress}}" tor-proxy)
}


DOCKER_ADD_HOSTS='--add-host=n01.cl01.ulaval.ca:132.203.123.89 --add-host=n02.cl01.ulaval.ca:132.203.123.87 --add-host=n03.cl01.ulaval.ca:132.203.123.98 --add-host=n04.cl01.ulaval.ca:132.203.123.94 --add-host=n05.cl01.ulaval.ca:132.203.123.76'
export DOCKER_ADD_HOSTS
 
alias hdp-client-bash='docker run $DOCKER_ADD_HOSTS --rm -it --read-only -v ${HADOOP_CONF_DIR:-/etc/hadoop/conf}:/etc/hadoop/conf -v $(pwd):/workdir -v $(pwd):$(pwd) -w $(pwd) --entrypoint=bash hdp-client'
alias hdp-client-hdfs='docker run $DOCKER_ADD_HOSTS --rm -it --read-only -v ${HADOOP_CONF_DIR:-/etc/hadoop/conf}:/etc/hadoop/conf -v $(pwd):/workdir -v $(pwd):$(pwd) -w $(pwd) --entrypoint=hdfs hdp-client'
alias hdp-client-yarn='docker run $DOCKER_ADD_HOSTS --rm -it --read-only -v ${HADOOP_CONF_DIR:-/etc/hadoop/conf}:/etc/hadoop/conf -v $(pwd):/workdir -v $(pwd):$(pwd) -w $(pwd) --entrypoint=yarn hdp-client'


